# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: githubsources.sources.knative.dev
  labels:
    contrib.eventing.knative.dev/release: devel
    eventing.knative.dev/source: "true"
    duck.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  annotations:
    # TODO add schemas and descriptions
    registry.knative.dev/eventTypes: |
      [
        { "type": "dev.knative.source.github.check_suite" },
        { "type": "dev.knative.source.github.commit_comment" },
        { "type": "dev.knative.source.github.create" },
        { "type": "dev.knative.source.github.delete" },
        { "type": "dev.knative.source.github.deployment" },
        { "type": "dev.knative.source.github.deployment_status" },
        { "type": "dev.knative.source.github.fork" },
        { "type": "dev.knative.source.github.gollum" },
        { "type": "dev.knative.source.github.installation" },
        { "type": "dev.knative.source.github.integration_installation" },
        { "type": "dev.knative.source.github.issue_comment" },
        { "type": "dev.knative.source.github.issues" },
        { "type": "dev.knative.source.github.label" },
        { "type": "dev.knative.source.github.member" },
        { "type": "dev.knative.source.github.membership" },
        { "type": "dev.knative.source.github.milestone" },
        { "type": "dev.knative.source.github.organization" },
        { "type": "dev.knative.source.github.org_block" },
        { "type": "dev.knative.source.github.page_build" },
        { "type": "dev.knative.source.github.ping" },
        { "type": "dev.knative.source.github.project_card" },
        { "type": "dev.knative.source.github.project_column" },
        { "type": "dev.knative.source.github.project" },
        { "type": "dev.knative.source.github.public" },
        { "type": "dev.knative.source.github.pull_request" },
        { "type": "dev.knative.source.github.pull_request_review" },
        { "type": "dev.knative.source.github.pull_request_review_comment" },
        { "type": "dev.knative.source.github.push" },
        { "type": "dev.knative.source.github.release" },
        { "type": "dev.knative.source.github.repository" },
        { "type": "dev.knative.source.github.status" },
        { "type": "dev.knative.source.github.team" },
        { "type": "dev.knative.source.github.team_add" },
        { "type": "dev.knative.source.github.watch" }
      ]
spec:
  group: sources.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    - sources
    kind: GitHubSource
    plural: githubsources
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type=='Ready')].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type=='Ready')].reason"
    - name: Sink
      type: string
      JSONPath: ".status.sinkUri"
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            accessToken:
              properties:
                secretKeyRef:
                  type: object
              type: object
            eventTypes:
              items:
                enum:
                - check_suite
                - commit_comment
                - create
                - delete
                - deployment
                - deployment_status
                - fork
                - gollum
                - installation
                - integration_installation
                - issue_comment
                - issues
                - label
                - member
                - membership
                - milestone
                - organization
                - org_block
                - page_build
                - ping
                - project_card
                - project_column
                - project
                - public
                - pull_request
                - pull_request_review
                - pull_request_review_comment
                - push
                - release
                - repository
                - status
                - team
                - team_add
                - watch
                type: string
              minItems: 1
              type: array
            ownerAndRepository:
              minLength: 1
              type: string
            secretToken:
              properties:
                secretKeyRef:
                  type: object
              type: object
            serviceAccountName:
              type: string
            sink:
              anyOf:
              - type: object
                description: "the destination that should receive events."
                properties:
                  ref:
                    type: object
                    description: "a reference to a Kubernetes object from which to retrieve the target URI."
                    required:
                    - apiVersion
                    - kind
                    - name
                    properties:
                      apiVersion:
                        type: string
                        minLength: 1
                      kind:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                  uri:
                    type: string
                    description: "the target URI. If ref is provided, this must be relative URI reference."
              - type: object
                description: "DEPRECATED: a reference to a Kubernetes object from which to retrieve the target URI."
                required:
                - apiVersion
                - kind
                - name
                properties:
                  apiVersion:
                    type: string
                    minLength: 1
                  kind:
                    type: string
                    minLength: 1
                  name:
                    type: string
                    minLength: 1
                  uri:
                    type: string
                    description: "the target URI. If ref is provided, this must be relative URI reference."
          required:
          - ownerAndRepository
          - eventTypes
          - accessToken
          - secretToken
          type: object
        status:
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    # we use a string in the stored object but a wrapper object
                    # at runtime.
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  severity:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            sinkUri:
              type: string
            webhookIDKey:
              type: string
          type: object
  version: v1alpha1

