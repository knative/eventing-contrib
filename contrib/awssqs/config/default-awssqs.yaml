apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: awssqssources.sources.eventing.knative.dev
spec:
  group: sources.eventing.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    - sources
    kind: AwsSqsSource
    plural: awssqssources
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            awsCredsSecret:
              type: object
            queueUrl:
              type: string
            serviceAccountName:
              type: string
            sink:
              type: object
          required:
          - queueUrl
          type: object
        status:
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  severity:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            sinkUri:
              type: string
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: awssqs
  namespace: knative-sources
secrets:
- name: awssqs-source-key
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: awssqs-controller-role
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - sources.eventing.knative.dev
  resources:
  - awssqssources
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - sources.eventing.knative.dev
  resources:
  - awssqssources/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - eventing.knative.dev
  resources:
  - channels
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - serving.knative.dev
  resources:
  - services
  - routes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: awssqs-controller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: awssqs-controller-role
subjects:
- kind: ServiceAccount
  name: awssqs
  namespace: knative-sources
---
apiVersion: v1
data:
  key.json: ""
kind: Secret
metadata:
  name: awssqs-source-key
  namespace: knative-sources
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: awssqs-controller
  name: awssqs-controller-service
  namespace: knative-sources
spec:
  ports:
  - port: 443
  selector:
    control-plane: awssqs-controller
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    control-plane: awssqs-controller
  name: awssqs-controller
  namespace: knative-sources
spec:
  selector:
    matchLabels:
      control-plane: awssqs-controller
  serviceName: awssqs-controller-service
  template:
    metadata:
      labels:
        control-plane: awssqs-controller
    spec:
      containers:
      - env:
        - name: AWS_APPLICATION_CREDENTIALS
          value: /var/secrets/aws/credentials
        - name: AWSSQS_RA_IMAGE
          value: github.com/knative/eventing-sources/contrib/awssqs/cmd/receive_adapter
        image: github.com/knative/eventing-sources/contrib/awssqs/cmd/controller
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 20m
            memory: 20Mi
        volumeMounts:
        - mountPath: /var/secrets/aws
          name: aws-credentials
      terminationGracePeriodSeconds: 10
      volumes:
      - name: aws-credentials
        secret:
          secretName: awssqs-source-credentials
---
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: awssqs-bus-ext
  namespace: knative-sources
spec:
  hosts:
  - '*.amazonaws.com'
  location: MESH_EXTERNAL
  ports:
  - name: https
    number: 443
    protocol: HTTPS
