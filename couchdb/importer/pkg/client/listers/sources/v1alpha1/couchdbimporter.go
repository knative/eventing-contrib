/*
Copyright 2019 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "knative.dev/eventing-contrib/couchdb/importer/pkg/apis/sources/v1alpha1"
)

// CouchDbImporterLister helps list CouchDbImporters.
type CouchDbImporterLister interface {
	// List lists all CouchDbImporters in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CouchDbImporter, err error)
	// CouchDbImporters returns an object that can list and get CouchDbImporters.
	CouchDbImporters(namespace string) CouchDbImporterNamespaceLister
	CouchDbImporterListerExpansion
}

// couchDbImporterLister implements the CouchDbImporterLister interface.
type couchDbImporterLister struct {
	indexer cache.Indexer
}

// NewCouchDbImporterLister returns a new CouchDbImporterLister.
func NewCouchDbImporterLister(indexer cache.Indexer) CouchDbImporterLister {
	return &couchDbImporterLister{indexer: indexer}
}

// List lists all CouchDbImporters in the indexer.
func (s *couchDbImporterLister) List(selector labels.Selector) (ret []*v1alpha1.CouchDbImporter, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CouchDbImporter))
	})
	return ret, err
}

// CouchDbImporters returns an object that can list and get CouchDbImporters.
func (s *couchDbImporterLister) CouchDbImporters(namespace string) CouchDbImporterNamespaceLister {
	return couchDbImporterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CouchDbImporterNamespaceLister helps list and get CouchDbImporters.
type CouchDbImporterNamespaceLister interface {
	// List lists all CouchDbImporters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.CouchDbImporter, err error)
	// Get retrieves the CouchDbImporter from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.CouchDbImporter, error)
	CouchDbImporterNamespaceListerExpansion
}

// couchDbImporterNamespaceLister implements the CouchDbImporterNamespaceLister
// interface.
type couchDbImporterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CouchDbImporters in the indexer for a given namespace.
func (s couchDbImporterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CouchDbImporter, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CouchDbImporter))
	})
	return ret, err
}

// Get retrieves the CouchDbImporter from the indexer for a given namespace and name.
func (s couchDbImporterNamespaceLister) Get(name string) (*v1alpha1.CouchDbImporter, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("couchdbimporter"), name)
	}
	return obj.(*v1alpha1.CouchDbImporter), nil
}
